@model RwaLib.MODELS.Author
@using RwaLib.MODELS
@{
    ViewBag.Title = "Index";
    IEnumerable<Book> books = ViewBag.books as IEnumerable<Book>;
    User user = ViewBag.user as User;
}

<style>


    .author {
        display: flex;
        position: fixed;
        top: 8%;
    }

    .author-info {
        display: block;
        text-align: center;
    }

    .author-info-name h4 {
        font-family: 'Merriweather', serif;
        font-size: 2vh;
        color: #002D62;
    }

    #author-portret {
        border-radius: 10px;
        box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;
    }

    .author-info-bio h4 {
        font-family: 'Merriweather', serif;
        font-size: 2vh;
        color: #002D62;
    }

    .author-info-bio textarea {
        border: none;
        text-align: center;
        font-size: 1.5vh;
    }

    .author-books {
        display: flex;
        flex-wrap: wrap;
        width: 60%;
        overflow-y: auto;
    }



    .empUpdateAuthor-modal {
        position: fixed;
        top: 25%;
        left: 35%;
        width: 30%;
        max-width: 30%;
        transform: scale(0);
        transition: 200ms ease-in-out;
        border-radius: 20px;
        z-index: 10;
        background: radial-gradient(343px at 46.3% 47.5%, rgb(242, 242, 242) 0%, rgb(241, 241, 241) 72.9%);
    }

        .empUpdateAuthor-modal.active {
            transform: scale(1);
        }

    .Modal-header {
        text-align: center;
        font-family: 'Merriweather', serif;
    }

        .Modal-header h3 {
            color: #002D62;
        }


    .cred {
        display: flex;
    }

        .cred h4 {
            width: 55%;
            font-family: 'Merriweather', serif;
        }

    .btn-grad {
        background-image: linear-gradient(to right, #4b6cb7 0%, #182848 51%, #4b6cb7 100%);
        margin: 10px;
        padding: 15px 45px;
        text-align: center;
        text-transform: uppercase;
        transition: 0.5s;
        background-size: 200% auto;
        color: white;
        box-shadow: 0 0 20px #eee;
        border-radius: 10px;
        display: block;
        border: none;
        font-size: 1.2vh;
    }

        .btn-grad:hover {
            background-position: right center; /* change the direction of the change here */
            color: #fff;
            text-decoration: none;
        }


    .btn-grad-q {
        background-image: linear-gradient(to right, #232526 0%, #414345 51%, #232526 100%);
        margin: 10px;
        padding: 15px 45px;
        text-align: center;
        text-transform: uppercase;
        transition: 0.5s;
        background-size: 200% auto;
        color: white;
        box-shadow: 0 0 20px #eee;
        border-radius: 10px;
        display: block;
        border: none;
        font-size: 1.2vh;
    }

        .btn-grad-q:hover {
            background-position: right center; /* change the direction of the change here */
            color: #fff;
            text-decoration: none;
        }

    #overlay {
        position: fixed;
        opacity: 0;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, .5);
        pointer-events: none;
    }

        #overlay.active {
            pointer-events: all;
            opacity: 1;
        }

    .empDeleteAuthor-modal {
        position: fixed;
        top: 25%;
        left: 35%;
        width: 30%;
        max-width: 30%;
        height: fit-content;
        transform: scale(0);
        transition: 200ms ease-in-out;
        border-radius: 20px;
        z-index: 10;
        background: radial-gradient(343px at 46.3% 47.5%, rgb(242, 242, 242) 0%, rgb(241, 241, 241) 72.9%);
    }

        .empDeleteAuthor-modal.active {
            transform: scale(1);
        }

    .btn {
        font-size: 1.2vh;
    }

    .book-card {
        display: block;
        height: fit-content;
    }

    .book-card {
        
        box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 10px 10px;
        margin: 1vh;
        width: 275px;
        height: 500px;
    }

    .book-info {
        font-family: 'Merriweather', serif;
        height: 150px;
    }

        .book-info h4 {
            color: #002d62;
        }

    .book-author {
        text-decoration: none;
        color: #002d62;
    }

        .book-author:hover {
            text-decoration: none;
            color: #002d62;
        }

    .book-info p {
        color: #002D62;
    }

    .info-btn {
        transition: all .5s ease;
        color: #002D62;
        border: 3px solid #002D62;
        font-family: 'Merriweather', serif;
        text-transform: uppercase;
        text-align: center;
        line-height: 1;
        font-size: 17px;
        background-color: transparent;
        padding: 10px;
        outline: none;
        border-radius: 4px;
        margin-left: 30px;
    }

        .info-btn:hover {
            color: white;
            background-color: #002D62;
            text-decoration: none;
        }

    .cred input {
        font-size: 1.2vh;
    }

    .cred textarea {
        font-size: 1.2vh;
    }

    .alert {
        font-size: 1.2vh;
    }
</style>

<div class="author mt-4 w-100">

    <div class="author-info" style="width: 40%;" data-aos="fade-right">

        <div style="display: flex;">

            <div class="author-info-photo w-50">

                <img id="author-portret" class="w-75" src="@Model.PicturePath" alt="">

            </div>

            <div class="author-info-name w-50">

                <h4 class="mt-5">@Model.FullName</h4>

                @if (user != null && user.IsAdmin)
                {
                    <div class="upd-del-buttons mt-5">

                        <button data-modal-target="#empUpdateAuthor-modal" type="button" class="btn btn-warning h-25">Edit author</button>

                        <button data-modal-target="#empDeleteAuthor-modal" type="button" class="btn btn-danger h-25">Delete author</button>

                    </div>
                }

            </div>

        </div>

        <div class="author-info-bio">

            <h4 class="mt-5">Biografija</h4>

            <textarea class="mt-3 w-75" name="" id="" cols="80" rows="10">@Model.Description</textarea>

        </div>


    </div>

    <div class="author-books" data-aos="fade-left">

        @if (books != null && books.Count() > 3)
        {
            foreach (Book book in books)
            {
                <div class="book-card">

                    <div class="book-img">

                        <img src="@book.PicturePath" width="275px" height="300px" alt="">

                    </div>

                    <div class="book-info ml-2 mb-2 mt-2">

                        <div class="book-headline">
                            <h4>@book.Title</h4>
                        </div>

                        @Html.ActionLink(book.Author.FullName, "Index", "Author", new { id = book.Author.IDAuthor }, new { @class = "book-author" })

                        <p class="mt-2">@book.Price HRK</p>

                    </div>

                    @Html.ActionLink("About book", "Index", "Book", new { title = book.Title }, new { @class = "info-btn ml-0 py-2 px-4 ml-4 rounded" })
                </div>
            }
        }
    </div>
</div>


@using (Html.BeginForm("EditAuthor","Author",new
{
    authorid = Model.IDAuthor
}))
{
    @Html.AntiForgeryToken()
    <div class="empUpdateAuthor-modal p-4 border border-secondary" id="empUpdateAuthor-modal">

        <div class="Modal-header m-3">

            <h3>Edit author</h3>

        </div>

        <div class="info ">

            <div class="cred mt-5">

                <h4 class="cred-name mx-2">First name</h4>

                <input class="form-control mr-4" type="text" value="@Model.FullName">

            </div>

        </div>


        <div class="cred mt-5">

            <h4 class="cred-name mx-2">Description</h4>

            <textarea class="form-control mr-4" rows="3" style="height: 200px;">@Model.Description</textarea>

        </div>

        <div class="cred mt-5">

            <h4 class="cred-name mx-2">Picture path</h4>

            <input class="form-control mr-4" type="text" value="@Model.PicturePath.ToString()">

        </div>

        <div class="action-buttons d-flex justify-content-center mt-5">

            <button type="submit" class="btn-grad">Submit</button>

            <button onclick="closeSelectedModal()" class="close-button btn-grad-q">Close</button>

        </div>
    </div>
}

    @if (user != null && user.IsAdmin)
    {
        using (Html.BeginForm("DeleteAuthor", "Author", new { id = Model.IDAuthor }, FormMethod.Post, null))
        {
            <div class="empDeleteAuthor-modal p-4 border border-secondary w-25" id="empDeleteAuthor-modal">

                <div class="Modal-header m-3">

                    <h3>Delete author</h3>

                </div>

                <div class="alert alert-danger" role="alert">
                    Are you shure that you want to delete this author?
                </div>

                <div class="action-buttons d-flex justify-content-center mt-3">

                    <button type="submit" class="btn-grad">Delete</button>

                    <button onclick="closeSelectedModal()" class="close-button btn-grad-q">Close</button>

                </div>

            </div>
        }
    }

